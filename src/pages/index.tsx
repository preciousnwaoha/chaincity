import React, {useState} from "react"
import Plate from '@/components/Plate'
import Head from 'next/head'
import Button from "@mui/material/Button"
import Box from "@mui/material/Box"
import { useDispatch } from 'react-redux'
import { gameActions } from '@/store/game-slice'
import { PLAYERS_DUM } from '@/utils/dummy-data'
import { LANDS, LAND_SETS } from '@/utils/monopoly-data'

import PlayerSelection from '@/components/PlayerSelection'
import EnterGame from "@/components/EnterGame"

export default function Home() {
  const dispatch = useDispatch();
  const [gameIsSet, setGameIsSet] = useState(false)
  const [showEnterGame, setShowEnterGame] = useState(false)

  const usedLands = LANDS.map((land, index) => {
    return {
      id: `land-${index + 1}`,
      type: land.type,
    setID: land.setID,
    color: land.color,
    name: land.name,
    rent: land.rent,
    mortgageFactor: land.mortgageFactor,
    unmortgageFactor: land.unmortgageFactor,
    mortgaged: false,
    price: land.price,
    maxHouses: land.maxHouses,
    maxHotels: land.maxHotels,
    houseRentFactor: land.houseRentFactor,
    image: land.image,
    startPos: land.startPos,
    endPos: land.endPos,
    owner: "",
    houses: 0,
    }
  
  })

  let gameStepSequence = [...usedLands.map((_, index) => `land-${index + 1}`)]

  

  const handleSetupGame = () => {
    dispatch(gameActions.setupGamePlay({
      lands: usedLands,
      gameStepSequence,
      startingCash: 15000,
      bankCash: 100000,
      landSets: LAND_SETS
    }))

    setGameIsSet(true)
  }

  const handlePlayerSelectionDone = () => {
    setShowEnterGame(true)
  }
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main >
        <Box>
          {!gameIsSet && <Box>
            <Button onClick={handleSetupGame}>Go</Button>
          </Box>}
          
          {(gameIsSet && !showEnterGame)&& <PlayerSelection onDone={handlePlayerSelectionDone} />}

          {showEnterGame && <EnterGame />}

        </Box>
      </main>
    </>
  )
}
